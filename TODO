TODO list (in order of priority)
---------

- add tests for sparse files and funny read/write operations
- allow for size_t and off_t (check int4 which should
  be int8, use be64ton and not htonl), flag for 64-bit
  (large filesystem)?
- handling of most file system metadata
  - ownership: how is this done depending on
    per-user or root mounts? think about security
    here!
  - extended attributes
- fix deadlock issues in multi-thread mode
- replace dir.path with a range search tree algo in DB
- rename (after a redo of the dir table)
- establish self-containment (with respect to
  a temporarily unavailable Postgresql server)
- minimal SELinux support, i.e. one fix security context
  per mount point
  unique: 8, opcode: GETXATTR (22), nodeid: 7, insize: 68
  unique: 8, error: -38 (Function not implemented), outsize: 16
  lsetxattr("file.sgml", "security.selinux", "system_u:object_r:httpd_sys_content_t:s0", 41, 0) = -1 EOPNOTSUPP (Operation not supported)
  - investigate SELinux races
  - make some performance tests, see http://archive09.linux.com/feature/127055
- optimizations:
  - use prepared statements, measure performance gain
  - use of asynchonous read/writes
  - optimize using .flag_nullpath_ok = 1, check functions if they can live without
    path (but for verbosity and error messages), maybe add path to PgFuseFile
  - make table names options, in order to store many pgfuse filesystems in one
    database
  
  
